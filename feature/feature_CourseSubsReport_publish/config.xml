<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.12">
      <gitLabConnection></gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.10.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://git@123.56.234.251:10022/Domain/course.git</url>
        <credentialsId>1f6fc89a-18c3-402e-89f3-1e617e6edd8a</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/dev-async</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.envpropagator.EnvPropagatorBuilder plugin="build-env-propagator@1.0">
      <envVariableString>CSProjPath=SubscriptionService:CSProjFile=CourseSubsReport:BINPATH=bin/Release/netcoreapp3.1:DOCKERIMAGENAME=coursesubsreport:DockerProName=subs:DockerName=w1.coursesubsreport.sub.group.hex.com:ServiceName=coursesubsreport-w1</envVariableString>
    </org.jenkinsci.plugins.envpropagator.EnvPropagatorBuilder>
    <org.jenkinsci.plugins.envpropagator.EnvPropagatorBuilder plugin="build-env-propagator@1.0">
      <envVariableString>ser=protobuf:KPversion=2</envVariableString>
    </org.jenkinsci.plugins.envpropagator.EnvPropagatorBuilder>
    <hudson.tasks.Shell>
      <command>docker login -u $dockerUser -p $dockerPwd reg.hexfuture.com
docker pull reg.hexfuture.com/dotnet/sdk:3.1
docker pull reg.hexfuture.com/dotnet/sdk:3.1
DockerImageVersion=`cat ./$CSProjPath/$CSProjFile/$CSProjFile.csproj|grep -i versionprefix|awk -F\&gt; &apos;{ print $2 }&apos;|awk -F\&lt; &apos;{ print $1 }&apos;`
# 创建Dockerfile
cat &gt; Dockerfile &lt;&lt;EOF
FROM reg.hexfuture.com/dotnet/sdk:3.1
COPY ./ /opt/publishdir
RUN dotnet publish /opt/publishdir/$CSProjPath/$CSProjFile/$CSProjFile.csproj \
--source $nuget_localsource \
--source $nuget_official \
-c Release -f netcoreapp3.1
FROM reg.hexfuture.com/dotnet/sdk:3.1 AS runtime
COPY --from=0 /opt/publishdir/$CSProjPath/$CSProjFile/$BINPATH3/publish/ /opt/$CSProjFile
WORKDIR /opt/$CSProjFile
VOLUME /opt/$CSProjFile
RUN exiftool /opt/$CSProjFile/*.dll|egrep &quot;^File Name|^File Version Number&quot;|awk -F &quot;:&quot; &apos;{tmp=\$2;getline;print tmp&quot; :&quot;\$2}&apos;
EOF

# 上传docker images
docker login -u $dockerUser -p $dockerPwd reg.hexfuture.com
docker build --no-cache -t reg.hexfuture.com/$DockerProName/$DOCKERIMAGENAME:$DockerImageVersion .
docker push reg.hexfuture.com/$DockerProName/$DOCKERIMAGENAME:$DockerImageVersion
docker tag reg.hexfuture.com/$DockerProName/$DOCKERIMAGENAME:$DockerImageVersion reg.hexfuture.com/$DockerProName/$DOCKERIMAGENAME
docker push reg.hexfuture.com/$DockerProName/$DOCKERIMAGENAME</command>
    </hudson.tasks.Shell>
    <jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin plugin="publish-over-ssh@1.20.1">
      <delegate>
        <consolePrefix>SSH: </consolePrefix>
        <delegate plugin="publish-over@0.22">
          <publishers>
            <jenkins.plugins.publish__over__ssh.BapSshPublisher plugin="publish-over-ssh@1.20.1">
              <configName>subs-55</configName>
              <verbose>false</verbose>
              <transfers>
                <jenkins.plugins.publish__over__ssh.BapSshTransfer>
                  <remoteDirectory></remoteDirectory>
                  <sourceFiles></sourceFiles>
                  <excludes></excludes>
                  <removePrefix></removePrefix>
                  <remoteDirectorySDF>false</remoteDirectorySDF>
                  <flatten>false</flatten>
                  <cleanRemote>false</cleanRemote>
                  <noDefaultExcludes>false</noDefaultExcludes>
                  <makeEmptyDirs>false</makeEmptyDirs>
                  <patternSeparator>[, ]+</patternSeparator>
                  <execCommand>#启动docker images
docker login -u $dockerUser -p $dockerPwd reg.hexfuture.com

docker pull reg.hexfuture.com/$DockerProName/$DOCKERIMAGENAME


# 判断1,如果存在同名字执行中的容器,先停止,没有判断停止失败情况
num=`docker ps -f name=$DockerName -f status=running|wc -l`
if [ $num == 2 ];then
 output=`docker stop $DockerName`
fi

# 判断2,如果存在同名字的停止的容器,删除
num=`docker ps -af name=$DockerName -f status=exited|wc -l`
if [ $num == 2 ];then
 output=`docker rm  $DockerName`
fi

docker run -d \
-v /etc/localtime:/etc/localtime \
-v /usr/local/docker-data/sleep.sh:/docker-entrypoint-initdb.d/sleep.sh \
-l io.rancher.container.network=true \
--ulimit core=-1 \
--security-opt seccomp=unconfined \
--privileged=true \
-e HOST_IP=$HOST_IP \
-e ETCD_ADDR=$ETCD_ADDR \
-h $DockerName \
--name $DockerName \
reg.hexfuture.com/$DockerProName/$DOCKERIMAGENAME \
dotnet \
/opt/$CSProjFile/$CSProjFile.dll \
--serviceName $ServiceName \
--zkConfigServer $ZKServer \
--minThreadCount $MinThreadCount \
--runScope $RunScope \
--msGroup $MsGroup \
--KPversion 2 \
--psapp v2 \
--ser protobuf \
--zkTimeOut $ZKTimeOut \
--mcTimeOut $MCTimeOut \
--trace $Trace \
--KafkaRedis  1</execCommand>
                  <execTimeout>120000</execTimeout>
                  <usePty>false</usePty>
                  <useAgentForwarding>false</useAgentForwarding>
                </jenkins.plugins.publish__over__ssh.BapSshTransfer>
              </transfers>
              <useWorkspaceInPromotion>false</useWorkspaceInPromotion>
              <usePromotionTimestamp>false</usePromotionTimestamp>
            </jenkins.plugins.publish__over__ssh.BapSshPublisher>
          </publishers>
          <continueOnError>false</continueOnError>
          <failOnError>false</failOnError>
          <alwaysPublishFromMaster>false</alwaysPublishFromMaster>
          <hostConfigurationAccess class="jenkins.plugins.publish_over_ssh.BapSshPublisherPlugin" reference="../.."/>
        </delegate>
      </delegate>
    </jenkins.plugins.publish__over__ssh.BapSshBuilderPlugin>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.37">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
      <disableDeferredWipeout>false</disableDeferredWipeout>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>